{"ast":null,"code":"// Exporting the Album class to make it available for use elsewhere in the application.\nexport class Album {\n  // The constructor for creating an instance of Album with specified details.\n  constructor(id, title, artist, description, year, image, tracks) {\n    // Private properties for album details. Encapsulation is used to control access to these properties.\n    this.id = -1; // A unique identifier for the album, initialized to -1 as a placeholder value.\n    this.title = \"\"; // The title of the album, initialized with an empty string.\n    this.artist = \"\"; // The name of the artist or band, initialized with an empty string.\n    this.description = \"\"; // A description of the album, initialized with an empty string.\n    this.year = 1900; // The release year of the album, initialized to a default value of 1900.\n    this.image = \"\"; // A URL or path to the album's cover image, initialized with an empty string.\n    this.tracks = []; // An array to hold the tracks of the album, initialized as an empty array.\n    this.id = id;\n    this.title = title;\n    this.artist = artist;\n    this.description = description;\n    this.year = year;\n    this.image = image;\n    this.tracks = tracks; // Takes an array of Track instances.\n  }\n  // Getters and setters for each property provide controlled access to the private properties.\n  get Id() {\n    return this.id;\n  }\n  set Id(id) {\n    this.id = id;\n  }\n  get Title() {\n    return this.title;\n  }\n  set Title(title) {\n    this.title = title;\n  }\n  get Artist() {\n    return this.artist;\n  }\n  set Artist(artist) {\n    this.artist = artist;\n  }\n  get Description() {\n    return this.description;\n  }\n  set Description(description) {\n    this.description = description;\n  }\n  get Year() {\n    return this.year;\n  }\n  set Year(year) {\n    // Validation or transformation logic could be added here.\n    this.year = year;\n  }\n  get Image() {\n    return this.image;\n  }\n  set Image(value) {\n    this.image = value;\n  }\n  get Tracks() {\n    return this.tracks;\n  }\n  set Tracks(tracks) {\n    // Additional logic, such as validating the array of tracks, could be added here.\n    this.tracks = tracks;\n  }\n}","map":{"version":3,"mappings":"AAGA;AACA,OAAM,MAAOA,KAAK;EAUd;EACAC,YAAYC,EAAU,EAAEC,KAAa,EAAEC,MAAc,EAAEC,WAAmB,EAAEC,IAAY,EAAEC,KAAa,EAAEC,MAAe;IAVxH;IACQ,OAAE,GAAW,CAAC,CAAC,CAAC,CAAC;IACjB,UAAK,GAAW,EAAE,CAAC,CAAC;IACpB,WAAM,GAAW,EAAE,CAAC,CAAC;IACrB,gBAAW,GAAW,EAAE,CAAC,CAAC;IAC1B,SAAI,GAAW,IAAI,CAAC,CAAC;IACrB,UAAK,GAAW,EAAE,CAAC,CAAC;IACpB,WAAM,GAAY,EAAE,CAAC,CAAC;IAI1B,IAAI,CAACN,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM,CAAC,CAAC;EAC1B;EAEA;EACA,IAAIC,EAAE;IACF,OAAO,IAAI,CAACP,EAAE;EAClB;EACA,IAAIO,EAAE,CAACP,EAAU;IACb,IAAI,CAACA,EAAE,GAAGA,EAAE;EAChB;EAEA,IAAIQ,KAAK;IACL,OAAO,IAAI,CAACP,KAAK;EACrB;EACA,IAAIO,KAAK,CAACP,KAAa;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEA,IAAIQ,MAAM;IACN,OAAO,IAAI,CAACP,MAAM;EACtB;EACA,IAAIO,MAAM,CAACP,MAAc;IACrB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EAEA,IAAIQ,WAAW;IACX,OAAO,IAAI,CAACP,WAAW;EAC3B;EACA,IAAIO,WAAW,CAACP,WAAmB;IAC/B,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;EAEA,IAAIQ,IAAI;IACJ,OAAO,IAAI,CAACP,IAAI;EACpB;EACA,IAAIO,IAAI,CAACP,IAAY;IACjB;IACA,IAAI,CAACA,IAAI,GAAGA,IAAI;EACpB;EAEA,IAAWQ,KAAK;IACZ,OAAO,IAAI,CAACP,KAAK;EACrB;EACA,IAAWO,KAAK,CAACC,KAAa;IAC1B,IAAI,CAACR,KAAK,GAAGQ,KAAK;EACtB;EAEA,IAAIC,MAAM;IACN,OAAO,IAAI,CAACR,MAAM;EACtB;EACA,IAAIQ,MAAM,CAACR,MAAe;IACtB;IACA,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB","names":["Album","constructor","id","title","artist","description","year","image","tracks","Id","Title","Artist","Description","Year","Image","value","Tracks"],"sourceRoot":"","sources":["C:\\git\\CST-391\\src\\activity3\\Musicapp\\src\\app\\models\\Album.ts"],"sourcesContent":["// Importing the Track class to use as the type for tracks within an album.\nimport { Track } from \"./Track\";\n\n// Exporting the Album class to make it available for use elsewhere in the application.\nexport class Album {\n    // Private properties for album details. Encapsulation is used to control access to these properties.\n    private id: number = -1; // A unique identifier for the album, initialized to -1 as a placeholder value.\n    private title: string = \"\"; // The title of the album, initialized with an empty string.\n    private artist: string = \"\"; // The name of the artist or band, initialized with an empty string.\n    private description: string = \"\"; // A description of the album, initialized with an empty string.\n    private year: number = 1900; // The release year of the album, initialized to a default value of 1900.\n    private image: string = \"\"; // A URL or path to the album's cover image, initialized with an empty string.\n    private tracks: Track[] = []; // An array to hold the tracks of the album, initialized as an empty array.\n\n    // The constructor for creating an instance of Album with specified details.\n    constructor(id: number, title: string, artist: string, description: string, year: number, image: string, tracks: Track[]) {\n        this.id = id;\n        this.title = title;\n        this.artist = artist;\n        this.description = description;\n        this.year = year;\n        this.image = image;\n        this.tracks = tracks; // Takes an array of Track instances.\n    }\n\n    // Getters and setters for each property provide controlled access to the private properties.\n    get Id(): number {\n        return this.id;\n    }\n    set Id(id: number) {\n        this.id = id;\n    }\n\n    get Title(): string {\n        return this.title;\n    }\n    set Title(title: string) {\n        this.title = title;\n    }\n\n    get Artist(): string {\n        return this.artist;\n    }\n    set Artist(artist: string) {\n        this.artist = artist;\n    }\n\n    get Description(): string {\n        return this.description;\n    }\n    set Description(description: string) {\n        this.description = description;\n    }\n\n    get Year(): number {\n        return this.year;\n    }\n    set Year(year: number) {\n        // Validation or transformation logic could be added here.\n        this.year = year;\n    }\n\n    public get Image(): string {\n        return this.image;\n    }\n    public set Image(value: string) {\n        this.image = value;\n    }\n\n    get Tracks(): Track[] {\n        return this.tracks;\n    }\n    set Tracks(tracks: Track[]) {\n        // Additional logic, such as validating the array of tracks, could be added here.\n        this.tracks = tracks;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}