{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/music-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateAlbumComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.album.artist);\n  }\n}\nfunction CreateAlbumComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Album was added successfully.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateAlbumComponent {\n  constructor(service) {\n    this.service = service;\n    this.album = {\n      albumId: Math.floor(Math.random() * 1000000),\n      title: \"\",\n      artist: \"\",\n      description: \"\",\n      year: \"\",\n      image: \"\",\n      tracks: []\n    };\n    this.tracksRaw = \"\";\n    this.wasSubmitted = false;\n  }\n  ngOnInit() {}\n  onSubmit() {\n    // Parse the Tracks and add to the Album then call the Service to create the new Album\n    let tracks = [];\n    let tracksAll = this.tracksRaw.split('\\n');\n    for (let i = 0; i < tracksAll.length; ++i) {\n      let title = \"\";\n      let lyrics = \"\";\n      let video = \"\";\n      let trackInfo = tracksAll[i];\n      let trackParts = trackInfo.split(':');\n      if (trackParts.length == 3) {\n        title = trackParts[0];\n        lyrics = trackParts[1];\n        video = trackParts[2];\n      } else if (trackParts.length == 2) {\n        title = trackParts[0];\n        lyrics = trackParts[1];\n      } else {\n        title = trackParts[0];\n      }\n      tracks.push({\n        trackId: Math.floor(Math.random() * 1000000),\n        number: i + 1,\n        title,\n        lyrics,\n        video\n      });\n    }\n    this.album.tracks = tracks;\n    console.log(this.album);\n    let status = this.service.createAlbum(this.album);\n    console.log(\"The return from createAlbum() was \" + status);\n    this.wasSubmitted = true;\n  }\n}\nCreateAlbumComponent.ɵfac = function CreateAlbumComponent_Factory(t) {\n  return new (t || CreateAlbumComponent)(i0.ɵɵdirectiveInject(i1.MusicServiceService));\n};\nCreateAlbumComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateAlbumComponent,\n  selectors: [[\"app-create-album\"]],\n  decls: 30,\n  vars: 8,\n  consts: [[\"align\", \"center\", \"style\", \"margin-left:50px;margin-right:50px;\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"createForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"artist\"], [\"id\", \"artist\", \"type\", \"text\", \"aria-describedby\", \"helpArtist\", \"placeholder\", \"Enter the name of the Artist\", \"required\", \"\", \"name\", \"artist\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"album\"], [\"id\", \"album\", \"type\", \"text\", \"aria-describedby\", \"helpAlbum\", \"placeholder\", \"Enter the name of the Album\", \"required\", \"\", \"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"rows\", \"3\", \"aria-describedby\", \"helpDescription\", \"placeholder\", \"Enter the description of the Album\", \"required\", \"\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"year\"], [\"id\", \"year\", \"type\", \"text\", \"aria-describedby\", \"helpYear\", \"placeholder\", \"Enter the year of the Album\", \"required\", \"\", \"name\", \"year\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"image\"], [\"id\", \"image\", \"type\", \"text\", \"aria-describedby\", \"helpImage\", \"placeholder\", \"Enter the image filename for the Album\", \"name\", \"image\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"tracks\"], [\"id\", \"tracks\", \"rows\", \"3\", \"aria-describedby\", \"helpTracks\", \"placeholder\", \"Enter each track followed by a return key for the Album\", \"required\", \"\", \"name\", \"tracks\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [4, \"ngIf\"], [\"align\", \"center\", 2, \"margin-left\", \"50px\", \"margin-right\", \"50px\"]],\n  template: function CreateAlbumComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CreateAlbumComponent_div_0_Template, 3, 1, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateAlbumComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Artist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.album.artist = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Album\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.album.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"textarea\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_Template_textarea_ngModelChange_14_listener($event) {\n        return ctx.album.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.album.year = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Image Filename\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.album.image = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Tracks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"textarea\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAlbumComponent_Template_textarea_ngModelChange_26_listener($event) {\n        return ctx.album.tracks = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 16);\n      i0.ɵɵtext(28, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(29, CreateAlbumComponent_div_29_Template, 2, 0, \"div\", 17);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.wasSubmitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.album.artist);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.album.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.album.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.album.year);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.album.image);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.album.tracks);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.wasSubmitted);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CreateAlbumComponent","constructor","service","albumId","Math","floor","random","title","artist","description","year","image","tracks","ngOnInit","onSubmit","tracksAll","tracksRaw","split","i","length","lyrics","video","trackInfo","trackParts","push","trackId","number","album","console","log","status","createAlbum","wasSubmitted","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\git\\CST-391\\src\\activity3\\Musicapp\\src\\app\\create-album\\create-album.component.html","C:\\git\\CST-391\\src\\activity3\\Musicapp\\src\\app\\create-album\\create-album.component.ts"],"sourcesContent":["<div align=\"center\" style=\"margin-left:50px;margin-right:50px;\" *ngIf=\"wasSubmitted\">\n  <p>{{ album.artist }}</p>\n</div>\n\n<form (ngSubmit)=\"onSubmit()\" #createForm=\"ngForm\">\n  <div class=\"form-group\">\n    <label for=\"artist\">Artist</label>\n    <input id=\"artist\" type=\"text\" class=\"form-control\" aria-describedby=\"helpArtist\" \n           placeholder=\"Enter the name of the Artist\" required \n           [(ngModel)]=\"album.artist\" name=\"artist\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"album\">Album</label>\n    <input id=\"album\" type=\"text\" class=\"form-control\" aria-describedby=\"helpAlbum\" \n           placeholder=\"Enter the name of the Album\" required \n           [(ngModel)]=\"album.title\" name=\"title\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"description\">Description</label>\n    <textarea id=\"description\" rows=\"3\" class=\"form-control\" aria-describedby=\"helpDescription\" \n              placeholder=\"Enter the description of the Album\" required \n              [(ngModel)]=\"album.description\" name=\"description\"></textarea>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"year\">Year</label>\n    <input id=\"year\" type=\"text\" class=\"form-control\" aria-describedby=\"helpYear\" \n           placeholder=\"Enter the year of the Album\" required \n           [(ngModel)]=\"album.year\" name=\"year\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"image\">Image Filename</label>\n    <input id=\"image\" type=\"text\" class=\"form-control\" aria-describedby=\"helpImage\" \n           placeholder=\"Enter the image filename for the Album\" \n           [(ngModel)]=\"album.image\" name=\"image\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"tracks\">Tracks</label>\n    <textarea id=\"tracks\" rows=\"3\" class=\"form-control\" aria-describedby=\"helpTracks\" \n              placeholder=\"Enter each track followed by a return key for the Album\" required \n              [(ngModel)]=\"album.tracks\" name=\"tracks\"></textarea>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n\n<div *ngIf=\"wasSubmitted\">\n  Album was added successfully.\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Album } from '../models/albums.model';\nimport { Track } from '../models/tracks.model';\nimport { MusicServiceService } from '../service/music-service.service';\n\n@Component({\n  selector: 'app-create-album', \n  templateUrl: './create-album.component.html',\n  styleUrls: ['./create-album.component.css']\n})\nexport class CreateAlbumComponent implements OnInit {\n\n  album: Album = {\n    albumId: Math.floor(Math.random() * 1000000),\n    title: \"\",\n    artist: \"\",\n    description: \"\",\n    year: \"\",\n    image: \"\",\n    tracks: [],\n  };\n\n  tracksRaw: string = \"\";\n  wasSubmitted: boolean = false;\n\n  constructor(private service: MusicServiceService) { }\n\n  ngOnInit() { }\n\n  public onSubmit() {\n    // Parse the Tracks and add to the Album then call the Service to create the new Album\n    let tracks: Track[] = [];\n    let tracksAll = this.tracksRaw.split('\\n');\n    for (let i = 0; i < tracksAll.length; ++i) {\n      let title = \"\";\n      let lyrics = \"\";\n      let video = \"\";\n      let trackInfo = tracksAll[i];\n      let trackParts = trackInfo.split(':');\n      if (trackParts.length == 3) {\n        title = trackParts[0];\n        lyrics = trackParts[1];\n        video = trackParts[2];\n      }\n      else if (trackParts.length == 2) {\n        title = trackParts[0];\n        lyrics = trackParts[1];\n      }\n      else {\n        title = trackParts[0];\n      }\n      tracks.push(\n        { trackId: Math.floor(Math.random() * 1000000), number: i + 1, title, lyrics, video }\n      );\n    }\n    this.album.tracks = tracks;\n    console.log(this.album);\n    let status = this.service.createAlbum(this.album);\n    console.log(\"The return from createAlbum() was \" + status);\n    this.wasSubmitted = true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}