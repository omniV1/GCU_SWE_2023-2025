{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/music-service.service\";\nimport * as i3 from \"@angular/common\";\nfunction DeleteAlbumComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Deleting album... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DeleteAlbumComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" The album has been successfully deleted. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DeleteAlbumComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" An error occurred while attempting to delete the album. \");\n    i0.ɵɵelementEnd();\n  }\n}\n// The @Component decorator provides the Angular metadata for the DeleteAlbumComponent.\nexport class DeleteAlbumComponent {\n  // The constructor injects services for use in the component.\n  constructor(route,\n  // Provides access to information about a route associated with the component.\n  musicService,\n  // Provides the music service for operations.\n  router // Provides the navigation functionality.\n  ) {\n    this.route = route;\n    this.musicService = musicService;\n    this.router = router;\n    // Properties indicating the state of the deletion process.\n    this.isDeleting = false;\n    this.isDeleted = false;\n    this.deleteError = false;\n  }\n  // Angular's ngOnInit lifecycle hook for initialization logic.\n  ngOnInit() {\n    // Extract the 'artist' and 'id' parameters from the current route.\n    const artist = this.route.snapshot.paramMap.get('artist');\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    // Check for the presence of 'artist' and 'id' and proceed to delete the album if both are available.\n    if (artist && id) {\n      this.deleteAlbum(id, artist);\n    }\n  }\n  deleteAlbum(id, artist) {\n    this.isDeleting = true;\n    this.musicService.deleteAlbum(id).subscribe({\n      next: () => {\n        this.isDeleting = false;\n        this.isDeleted = true;\n        console.log('Album successfully deleted');\n        setTimeout(() => this.router.navigate(['/list-albums']), 2000);\n      },\n      error: err => {\n        this.isDeleting = false;\n        this.deleteError = true;\n        console.log('Error deleting album:', err);\n      }\n    });\n  }\n}\nDeleteAlbumComponent.ɵfac = function DeleteAlbumComponent_Factory(t) {\n  return new (t || DeleteAlbumComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MusicServiceService), i0.ɵɵdirectiveInject(i1.Router));\n};\nDeleteAlbumComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DeleteAlbumComponent,\n  selectors: [[\"app-delete-album\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"]],\n  template: function DeleteAlbumComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DeleteAlbumComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, DeleteAlbumComponent_div_1_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(2, DeleteAlbumComponent_div_2_Template, 2, 0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isDeleting);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDeleted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.deleteError);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IACAA,2BAAwB;IACpBA,mCACF;IAAAA,iBAAM;;;;;IAGNA,2BAAuB;IACrBA,0DACF;IAAAA,iBAAM;;;;;IAGNA,2BAAyB;IACvBA,yEACF;IAAAA,iBAAM;;;ACTR;AAMA,OAAM,MAAOC,oBAAoB;EAM/B;EACAC,YACUC,KAAqB;EAAE;EACvBC,YAAiC;EAAE;EACnCC,MAAc,CAAC;EAAA;IAFf,UAAK,GAALF,KAAK;IACL,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IAThB;IACA,eAAU,GAAY,KAAK;IAC3B,cAAS,GAAY,KAAK;IAC1B,gBAAW,GAAY,KAAK;EAOxB;EAEJ;EACAC,QAAQ;IACN;IACA,MAAMC,MAAM,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzD,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACT,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAEzD;IACA,IAAIH,MAAM,IAAII,EAAE,EAAE;MAChB,IAAI,CAACE,WAAW,CAACF,EAAE,EAAEJ,MAAM,CAAC;;EAEhC;EAEFM,WAAW,CAACF,EAAU,EAAEJ,MAAc;IAClC,IAAI,CAACO,UAAU,GAAG,IAAI;IACtB,IAAI,CAACV,YAAY,CAACS,WAAW,CAACF,EAAE,CAAC,CAACI,SAAS,CAAC;MACxCC,IAAI,EAAE,MAAK;QACP,IAAI,CAACF,UAAU,GAAG,KAAK;QACvB,IAAI,CAACG,SAAS,GAAG,IAAI;QACrBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzCC,UAAU,CAAC,MAAM,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC;MAClE,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACX,IAAI,CAACT,UAAU,GAAG,KAAK;QACvB,IAAI,CAACU,WAAW,GAAG,IAAI;QACvBN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,GAAG,CAAC;MAC7C;KACH,CAAC;EACN;;AAxCatB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTjC7B,qEAEQ;MAGNA,qEAEM;MAGNA,qEAEM;;;MAZFA,qCAAgB;MAKdA,eAAe;MAAfA,oCAAe;MAKfA,eAAiB;MAAjBA,sCAAiB","names":["i0","DeleteAlbumComponent","constructor","route","musicService","router","ngOnInit","artist","snapshot","paramMap","get","id","Number","deleteAlbum","isDeleting","subscribe","next","isDeleted","console","log","setTimeout","navigate","error","err","deleteError","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Owenl\\source\\repos\\Activity3\\Musicapp\\src\\app\\delete-album\\delete-album.component.html","C:\\Users\\Owenl\\source\\repos\\Activity3\\Musicapp\\src\\app\\delete-album\\delete-album.component.ts"],"sourcesContent":["<!-- This div will be displayed while the delete operation is in progress -->\n<div *ngIf=\"isDeleting\">\n    Deleting album...\n  </div>\n  \n  <!-- This div will be displayed if the delete operation is successful -->\n  <div *ngIf=\"isDeleted\">\n    The album has been successfully deleted.\n  </div>\n  \n  <!-- This div will be displayed if there was an error during the deletion process -->\n  <div *ngIf=\"deleteError\">\n    An error occurred while attempting to delete the album.\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MusicServiceService } from '../service/music-service.service';\n\n// The @Component decorator provides the Angular metadata for the DeleteAlbumComponent.\n@Component({\n  selector: 'app-delete-album', // The HTML tag for this component.\n  templateUrl: './delete-album.component.html', // The HTML layout for this component.\n  styleUrls: ['./delete-album.component.css'] // The CSS styling for this component.\n})\nexport class DeleteAlbumComponent implements OnInit {\n  // Properties indicating the state of the deletion process.\n  isDeleting: boolean = false;\n  isDeleted: boolean = false;\n  deleteError: boolean = false;\n\n  // The constructor injects services for use in the component.\n  constructor(\n    private route: ActivatedRoute, // Provides access to information about a route associated with the component.\n    private musicService: MusicServiceService, // Provides the music service for operations.\n    private router: Router // Provides the navigation functionality.\n  ) { }\n\n  // Angular's ngOnInit lifecycle hook for initialization logic.\n  ngOnInit() {\n    // Extract the 'artist' and 'id' parameters from the current route.\n    const artist = this.route.snapshot.paramMap.get('artist');\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    \n    // Check for the presence of 'artist' and 'id' and proceed to delete the album if both are available.\n    if (artist && id) {\n      this.deleteAlbum(id, artist);\n    }\n  }\n\ndeleteAlbum(id: number, artist: string) {\n    this.isDeleting = true;\n    this.musicService.deleteAlbum(id).subscribe({\n        next: () => {\n            this.isDeleting = false;\n            this.isDeleted = true;\n            console.log('Album successfully deleted');\n            setTimeout(() => this.router.navigate(['/list-albums']), 2000);\n        },\n        error: (err) => {\n            this.isDeleting = false;\n            this.deleteError = true;\n            console.log('Error deleting album:', err);\n        }\n    });\n}\n\n\n\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}