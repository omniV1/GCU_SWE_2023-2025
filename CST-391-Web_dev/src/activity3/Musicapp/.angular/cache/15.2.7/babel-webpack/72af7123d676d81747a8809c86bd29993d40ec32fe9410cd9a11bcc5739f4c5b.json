{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/music-service.service\";\nimport * as i3 from \"@angular/common\";\nfunction DeleteAlbumComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Deleting album... \");\n    i0.ɵɵelementEnd();\n  }\n}\n// Component decorator defines metadata for DeleteAlbumComponent\nexport class DeleteAlbumComponent {\n  // The constructor injects the ActivatedRoute, MusicServiceService, and Router services\n  constructor(route,\n  // Contains information about the route associated with this component\n  musicService,\n  // Service used to interact with music data\n  router // Service used for navigating between routes\n  ) {\n    this.route = route;\n    this.musicService = musicService;\n    this.router = router;\n  }\n  // OnInit lifecycle hook is used to perform initialization logic\n  ngOnInit() {\n    // Retrieve the artist and id from the current route parameters\n    const artist = this.route.snapshot.paramMap.get('artist');\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    // If both artist and id are valid, proceed to delete the album\n    if (artist && id) {\n      this.deleteAlbum(id, artist);\n    }\n  }\n  // deleteAlbum method handles the logic for deleting an album\n  deleteAlbum(id, artist) {\n    // Call the deleteAlbum method from the music service and store the result\n    const result = this.musicService.deleteAlbum(id, artist);\n    // If the result is 0, it means deletion was successful\n    if (result === 0) {\n      console.log('Album successfully deleted');\n      // Navigate to the list-albums route after deletion\n      this.router.navigate(['/list-albums']);\n    } else {\n      // If result is not 0, log an error message\n      console.log('Error deleting album');\n      // Additional error handling can be implemented here\n    }\n  }\n}\n\nDeleteAlbumComponent.ɵfac = function DeleteAlbumComponent_Factory(t) {\n  return new (t || DeleteAlbumComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MusicServiceService), i0.ɵɵdirectiveInject(i1.Router));\n};\nDeleteAlbumComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DeleteAlbumComponent,\n  selectors: [[\"app-delete-album\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"]],\n  template: function DeleteAlbumComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DeleteAlbumComponent_div_0_Template, 2, 0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", true);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IACAA,2BAAkB;IACdA,mCACF;IAAAA,iBAAM;;;ACCR;AAMA,OAAM,MAAOC,oBAAoB;EAC/B;EACAC,YACUC,KAAqB;EAAE;EACvBC,YAAiC;EAAE;EACnCC,MAAc,CAAC;EAAA;IAFf,UAAK,GAALF,KAAK;IACL,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;EACZ;EAEJ;EACAC,QAAQ;IACN;IACA,MAAMC,MAAM,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzD,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACT,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD;IACA,IAAIH,MAAM,IAAII,EAAE,EAAE;MAChB,IAAI,CAACE,WAAW,CAACF,EAAE,EAAEJ,MAAM,CAAC;;EAEhC;EAEA;EACAM,WAAW,CAACF,EAAU,EAAEJ,MAAc;IACpC;IACA,MAAMO,MAAM,GAAG,IAAI,CAACV,YAAY,CAACS,WAAW,CAACF,EAAE,EAAEJ,MAAM,CAAC;IACxD;IACA,IAAIO,MAAM,KAAK,CAAC,EAAE;MAChBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC;MACA,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;KACvC,MAAM;MACL;MACAF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC;;EAEJ;;;AAjCWf,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTjCtB,qEAEQ;;;MAFFA,2BAAU","names":["i0","DeleteAlbumComponent","constructor","route","musicService","router","ngOnInit","artist","snapshot","paramMap","get","id","Number","deleteAlbum","result","console","log","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Owenl\\source\\repos\\Activity3\\Musicapp\\src\\app\\delete-album\\delete-album.component.html","C:\\Users\\Owenl\\source\\repos\\Activity3\\Musicapp\\src\\app\\delete-album\\delete-album.component.ts"],"sourcesContent":["<!-- delete-album.component.html -->\n<div *ngIf=\"true\"> <!-- Placeholder condition -->\n    Deleting album...\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MusicServiceService } from '../service/music-service.service';\n\n// Component decorator defines metadata for DeleteAlbumComponent\n@Component({\n  selector: 'app-delete-album', // the selector is the name of the HTML tag that will be used to represent this component\n  templateUrl: './delete-album.component.html', // the location of the template file for this component\n  styleUrls: ['./delete-album.component.css'] // the location of the style file for this component\n})\nexport class DeleteAlbumComponent implements OnInit {\n  // The constructor injects the ActivatedRoute, MusicServiceService, and Router services\n  constructor(\n    private route: ActivatedRoute, // Contains information about the route associated with this component\n    private musicService: MusicServiceService, // Service used to interact with music data\n    private router: Router // Service used for navigating between routes\n  ) { }\n\n  // OnInit lifecycle hook is used to perform initialization logic\n  ngOnInit() {\n    // Retrieve the artist and id from the current route parameters\n    const artist = this.route.snapshot.paramMap.get('artist');\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    // If both artist and id are valid, proceed to delete the album\n    if (artist && id) {\n      this.deleteAlbum(id, artist);\n    }\n  }\n\n  // deleteAlbum method handles the logic for deleting an album\n  deleteAlbum(id: number, artist: string) {\n    // Call the deleteAlbum method from the music service and store the result\n    const result = this.musicService.deleteAlbum(id, artist);\n    // If the result is 0, it means deletion was successful\n    if (result === 0) {\n      console.log('Album successfully deleted');\n      // Navigate to the list-albums route after deletion\n      this.router.navigate(['/list-albums']);\n    } else {\n      // If result is not 0, log an error message\n      console.log('Error deleting album');\n      // Additional error handling can be implemented here\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}