{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/music-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction EditAlbumComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3, 4);\n    i0.ɵɵlistener(\"ngSubmit\", function EditAlbumComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSubmit());\n    });\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5, \"Artist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function EditAlbumComponent_div_0_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.album.Artist = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 8);\n    i0.ɵɵtext(9, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function EditAlbumComponent_div_0_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.album.Title = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 10);\n    i0.ɵɵtext(13, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"textarea\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function EditAlbumComponent_div_0_Template_textarea_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.album.Description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 12);\n    i0.ɵɵtext(17, \"Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function EditAlbumComponent_div_0_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.album.Year = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 5)(20, \"label\", 14);\n    i0.ɵɵtext(21, \"Image Filename\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function EditAlbumComponent_div_0_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.album.Image = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 5)(24, \"label\", 16);\n    i0.ɵɵtext(25, \"Tracks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"textarea\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function EditAlbumComponent_div_0_Template_textarea_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.tracksRaw = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"button\", 18);\n    i0.ɵɵtext(28, \"Submit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(29, \"br\");\n    i0.ɵɵelementStart(30, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function EditAlbumComponent_div_0_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onCancel());\n    });\n    i0.ɵɵtext(31, \"Cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Artist);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Year);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.Image);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.tracksRaw);\n  }\n}\nfunction EditAlbumComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Album was updated successfully.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EditAlbumComponent {\n  // The constructor for this component. The MusicServiceService is injected to fetch album data.\n  constructor(service) {\n    this.service = service;\n    // The artist for whom albums are to be displayed. This property is set by the parent component.\n    this.artist = null;\n    // Array to hold the list of albums retrieved for the specified artist.\n    this.albums = [];\n    // Property to track which album, if any, is currently selected by the user.\n    this.selectedAlbum = null;\n  }\n  // ngOnInit is a lifecycle hook executed after Angular has initialized the component's inputs and views.\n  // It checks if an artist is selected and fetches the corresponding albums.\n  ngOnInit() {\n    // Checks if an artist has been provided as input from the parent component.\n    if (this.artist) {\n      // Calls the service to retrieve albums for the specified artist and assigns them to the 'albums' property.\n      this.albums = this.service.getAlbums(this.artist.Name);\n    }\n  }\n  // Handler for when an album is selected from the list.\n  // It updates the 'selectedAlbum' property and logs the album's title.\n  onSelectAlbum(album) {\n    console.log(\"Selected Album of \" + album.Title); // Logs the title of the selected album.\n    this.selectedAlbum = album; // Updates the selectedAlbum property to reflect the user's selection.\n  }\n}\n\nEditAlbumComponent.ɵfac = function EditAlbumComponent_Factory(t) {\n  return new (t || EditAlbumComponent)(i0.ɵɵdirectiveInject(i1.MusicServiceService));\n};\nEditAlbumComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditAlbumComponent,\n  selectors: [[\"app-edit-album\"]],\n  inputs: {\n    artist: \"artist\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"align\", \"center\", \"style\", \"margin-left:50px;margin-right:50px\", 4, \"ngIf\"], [4, \"ngIf\"], [\"align\", \"center\", 2, \"margin-left\", \"50px\", \"margin-right\", \"50px\"], [\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [\"updateForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"artist\"], [\"id\", \"artist\", \"type\", \"text\", \"aria-describedby\", \"helpArtist\", \"placeholder\", \"Enter the name of the Artist\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"100\", \"name\", \"artist\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"album\"], [\"id\", \"album\", \"type\", \"text\", \"aria-describedby\", \"helpAlbum\", \"placeholder\", \"Enter the name of the Album\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"100\", \"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"rows\", \"3\", \"aria-describedby\", \"helpDescription\", \"placeholder\", \"Enter the description of the Album\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"500\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"year\"], [\"id\", \"year\", \"type\", \"number\", \"aria-describedby\", \"helpYear\", \"placeholder\", \"Enter the year of the Album\", \"required\", \"\", \"min\", \"1900\", \"max\", \"2030\", \"name\", \"year\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"image\"], [\"id\", \"image\", \"type\", \"text\", \"aria-describedby\", \"helpImage\", \"placeholder\", \"Enter the image filename for the Album\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"100\", \"name\", \"image\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"tracks\"], [\"id\", \"tracks\", \"rows\", \"3\", \"aria-describedby\", \"helpTracks\", \"placeholder\", \"Enter each track followed by a return key for the Album\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"1000\", \"name\", \"tracks\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn\", \"btn-light\", 3, \"click\"]],\n  template: function EditAlbumComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EditAlbumComponent_div_0_Template, 32, 6, \"div\", 0);\n      i0.ɵɵtemplate(1, EditAlbumComponent_div_1_Template, 2, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.album != null && !ctx.wasSubmitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.album != null && ctx.wasSubmitted);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.MaxLengthValidator, i3.MinValidator, i3.MaxValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IACAA,8BAAsG;IAE9FA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IAE3BA,8BAAwB;IACFA,sBAAM;IAAAA,iBAAQ;IAClCA,gCAA6M;IAAzCA;MAAAA;MAAA;MAAA,OAAaA,4CAAoB;IAAA,EAAP;IAA9LA,iBAA6M;IAG/MA,8BAAwB;IACHA,qBAAK;IAAAA,iBAAQ;IAChCA,iCAAwM;IAAvCA;MAAAA;MAAA;MAAA,OAAaA,2CAAmB;IAAA,EAAP;IAA1LA,iBAAwM;IAG1MA,+BAAwB;IACGA,4BAAW;IAAAA,iBAAQ;IAC5CA,qCAAuO;IAAnDA;MAAAA;MAAA;MAAA,OAAaA,iDAAyB;IAAA,EAAP;IAAoBA,iBAAW;IAGpPA,+BAAwB;IACJA,qBAAI;IAAAA,iBAAQ;IAC9BA,kCAA8L;IAArCA;MAAAA;MAAA;MAAA,OAAaA,0CAAkB;IAAA,EAAP;IAAjLA,iBAA8L;IAGhMA,+BAAwB;IACHA,+BAAc;IAAAA,iBAAQ;IACzCA,kCAAmN;IAAvCA;MAAAA;MAAA;MAAA,OAAaA,2CAAmB;IAAA,EAAP;IAArMA,iBAAmN;IAGrNA,+BAAwB;IACFA,uBAAM;IAAAA,iBAAQ;IAClCA,qCAAsO;IAAtCA;MAAAA;MAAA;MAAA;IAAA,EAAuB;IAAeA,iBAAW;IAGnPA,mCAA8C;IAAAA,uBAAM;IAAAA,iBAAS;IAE/DA,sBAAK;IAELA,mCAAuD;IAArBA;MAAAA;MAAA;MAAA,OAASA,iCAAU;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAhCkGA,eAA0B;IAA1BA,6CAA0B;IAK7BA,eAAyB;IAAzBA,4CAAyB;IAKNA,eAA+B;IAA/BA,kDAA+B;IAK1DA,eAAwB;IAAxBA,2CAAwB;IAKLA,eAAyB;IAAzBA,4CAAyB;IAKLA,eAAuB;IAAvBA,0CAAuB;;;;;IAU7NA,2BAA4C;IAC1CA,kDACF;IAAAA,iBAAM;;;ACjCN,OAAM,MAAOC,kBAAkB;EAU9B;EACAC,YAAoBC,OAA4B;IAA5B,YAAO,GAAPA,OAAO;IAV3B;IACS,WAAM,GAAkB,IAAI;IAErC;IACA,WAAM,GAAY,EAAE;IAEpB;IACA,kBAAa,GAAiB,IAAI;EAGkB;EAEpD;EACA;EACAC,QAAQ;IACP;IACA,IAAI,IAAI,CAACC,MAAM,EAAE;MAChB;MACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACH,OAAO,CAACI,SAAS,CAAC,IAAI,CAACF,MAAM,CAACG,IAAI,CAAC;;EAExD;EAEA;EACA;EACOC,aAAa,CAACC,KAAY;IAChCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;IACjD,IAAI,CAACC,aAAa,GAAGJ,KAAK,CAAC,CAAC;EAC7B;;;AA5BYT,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;IAAAX;EAAA;EAAAY;EAAAC;EAAAC;EAAAC;IAAA;MDV/BpB,oEAuCM;MAENA,mEAEM;;;MA3C0DA,6DAAoC;MAyC7FA,eAAmC;MAAnCA,4DAAmC","names":["i0","EditAlbumComponent","constructor","service","ngOnInit","artist","albums","getAlbums","Name","onSelectAlbum","album","console","log","Title","selectedAlbum","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\git\\CST-391\\src\\activity3\\Musicapp\\src\\app\\edit-album\\edit-album.component.html","C:\\git\\CST-391\\src\\activity3\\Musicapp\\src\\app\\edit-album\\edit-album.component.ts"],"sourcesContent":["<!-- This div container will only be displayed if an album is loaded and has not yet been submitted for an update. -->\n<div align=\"center\" style=\"margin-left:50px;margin-right:50px\" *ngIf=\"album != null && !wasSubmitted\">\n  <!-- The form for editing an album's details. Form submission is handled by the onSubmit() method. -->\n  <form (ngSubmit)=\"onSubmit()\" #updateForm=\"ngForm\" ngNativeValidate>\n    <!-- Artist input field, bound to the album.Artist property. -->\n    <div class=\"form-group\">\n      <label for=\"artist\">Artist</label>\n      <input id=\"artist\" type=\"text\" class=\"form-control\" aria-describedby=\"helpArtist\" placeholder=\"Enter the name of the Artist\" required minlength=\"1\" maxlength=\"100\" [(ngModel)]=\"album.Artist\" name=\"artist\">\n    </div>\n    <!-- Album title input field, bound to the album.Title property. -->\n    <div class=\"form-group\">\n      <label for=\"album\">Album</label>\n      <input id=\"album\" type=\"text\" class=\"form-control\" aria-describedby=\"helpAlbum\" placeholder=\"Enter the name of the Album\" required minlength=\"1\" maxlength=\"100\" [(ngModel)]=\"album.Title\" name=\"title\">\n    </div>\n    <!-- Description textarea, bound to the album.Description property. -->\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" rows=\"3\" class=\"form-control\" aria-describedby=\"helpDescription\" placeholder=\"Enter the description of the Album\" required minlength=\"1\" maxlength=\"500\" [(ngModel)]=\"album.Description\" name=\"description\"></textarea>\n    </div>\n    <!-- Year input field, bound to the album.Year property. -->\n    <div class=\"form-group\">\n      <label for=\"year\">Year</label>\n      <input id=\"year\" type=\"number\" class=\"form-control\" aria-describedby=\"helpYear\" placeholder=\"Enter the year of the Album\" required min=\"1900\" max=\"2030\" [(ngModel)]=\"album.Year\" name=\"year\">\n    </div>\n    <!-- Image filename input field, bound to the album.Image property. -->\n    <div class=\"form-group\">\n      <label for=\"image\">Image Filename</label>\n      <input id=\"image\" type=\"text\" class=\"form-control\" aria-describedby=\"helpImage\" placeholder=\"Enter the image filename for the Album\" required minlength=\"1\" maxlength=\"100\" [(ngModel)]=\"album.Image\" name=\"image\">\n    </div>\n    <!-- Tracks textarea, bound to the tracksRaw property for editing track details. -->\n    <div class=\"form-group\">\n      <label for=\"tracks\">Tracks</label>\n      <textarea id=\"tracks\" rows=\"3\" class=\"form-control\" aria-describedby=\"helpTracks\" placeholder=\"Enter each track followed by a return key for the Album\" required minlength=\"1\" maxlength=\"1000\" [(ngModel)]=\"tracksRaw\" name=\"tracks\"></textarea>\n    </div>\n    <!-- Submit button for the form. -->\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n  <br/>\n  <!-- Cancel button to go back to the previous view without making changes. -->\n  <button class=\"btn btn btn-light\" (click)=\"onCancel()\">Cancel</button>\n</div>\n<!-- This div is displayed only after the album is successfully submitted. -->\n<div  *ngIf=\"album != null && wasSubmitted\">\n  Album was updated successfully.\n</div>\n\n","// Import statements to include Angular core functionalities, the service for music data retrieval, and model classes.\nimport { Component, OnInit, Input } from '@angular/core';\nimport { MusicServiceService } from '../service/music-service.service';\nimport { Album } from '../models/Album';\nimport { Artist } from '../models/Artist';\n\n@Component({\n\tselector: 'app-edit-album',\n\ttemplateUrl: './edit-album.component.html',\n\tstyleUrls: ['./edit-album.component.css']\n  })\nexport class EditAlbumComponent implements OnInit {\n\t// The artist for whom albums are to be displayed. This property is set by the parent component.\n\t@Input() artist: Artist | null = null;\n\n\t// Array to hold the list of albums retrieved for the specified artist.\n\talbums: Album[] = [];\n\n\t// Property to track which album, if any, is currently selected by the user.\n\tselectedAlbum: Album | null = null;\n\n\t// The constructor for this component. The MusicServiceService is injected to fetch album data.\n\tconstructor(private service: MusicServiceService) { }\n\n\t// ngOnInit is a lifecycle hook executed after Angular has initialized the component's inputs and views.\n\t// It checks if an artist is selected and fetches the corresponding albums.\n\tngOnInit() {\n\t\t// Checks if an artist has been provided as input from the parent component.\n\t\tif (this.artist) {\n\t\t\t// Calls the service to retrieve albums for the specified artist and assigns them to the 'albums' property.\n\t\t\tthis.albums = this.service.getAlbums(this.artist.Name);\n\t\t}\n\t}\n\n\t// Handler for when an album is selected from the list.\n\t// It updates the 'selectedAlbum' property and logs the album's title.\n\tpublic onSelectAlbum(album: Album) {\n\t\tconsole.log(\"Selected Album of \" + album.Title); // Logs the title of the selected album.\n\t\tthis.selectedAlbum = album; // Updates the selectedAlbum property to reflect the user's selection.\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}