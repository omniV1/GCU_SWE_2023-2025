{"ast":null,"code":"import { Artist } from '../models/Artist';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MusicServiceService {\n  constructor(http) {\n    this.http = http;\n    this.artists = [];\n    this.albums = [];\n  }\n  // Initializes the artists array with predefined data.\n  createArtists() {\n    this.artists.push(new Artist(0, 'The Beatles'));\n    // Add more artists as needed\n  }\n  // Retrieves all artists.\n  getArtists() {\n    return this.artists;\n  }\n  // Retrieves all albums for a given artist.\n  getAlbums(artist) {\n    return this.albums.filter(album => album.Artist);\n  }\n  // Retrieves a specific album by its ID.\n  getAlbum(id) {\n    return this.http.get(`/api/albums/${id}`);\n  }\n  // Adds a new album to the collection.\n  createAlbum(album) {\n    return this.http.post('/api/albums', album);\n  }\n  // Deletes an album from the collection based on its ID.\n  deleteAlbum(id) {\n    return this.http.delete(`/api/albums/${id}`);\n  }\n}\nMusicServiceService.ɵfac = function MusicServiceService_Factory(t) {\n  return new (t || MusicServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nMusicServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MusicServiceService,\n  factory: MusicServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,MAAM,QAAQ,kBAAkB;;;AAKzC,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHP,YAAO,GAAa,EAAE;IACtB,WAAM,GAAY,EAAE;EAEE;EAEvC;EACQC,aAAa;IACnB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAIN,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;IAC/C;EACF;EAEA;EACOO,UAAU;IACf,OAAO,IAAI,CAACF,OAAO;EACrB;EAEA;EACOG,SAAS,CAACC,MAAc;IAC7B,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACZ,MAAM,CAAC;EAClD;EAEA;EACOa,QAAQ,CAACC,EAAU;IACxB,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAQ,eAAeD,EAAE,EAAE,CAAC;EAClD;EAEA;EACOE,WAAW,CAACJ,KAAY;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACc,IAAI,CAAQ,aAAa,EAAEL,KAAK,CAAC;EACpD;EAGA;EACOM,WAAW,CAACJ,EAAU;IAC3B,OAAO,IAAI,CAACX,IAAI,CAACgB,MAAM,CAAO,eAAeL,EAAE,EAAE,CAAC;EACpD;;AApCWb,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAmB,SAAnBnB,mBAAmB;EAAAoB,YAFlB;AAAM","names":["Artist","MusicServiceService","constructor","http","createArtists","artists","push","getArtists","getAlbums","artist","albums","filter","album","getAlbum","id","get","createAlbum","post","deleteAlbum","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Owenl\\source\\repos\\Activity3\\Musicapp\\src\\app\\service\\music-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'; // Import HttpClient\nimport { Observable } from 'rxjs';\n\nimport { Album } from '../models/Album';\nimport { Artist } from '../models/Artist';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicServiceService {\n  private readonly artists: Artist[] = [];\n  private readonly albums: Album[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  // Initializes the artists array with predefined data.\n  private createArtists(): void {\n    this.artists.push(new Artist(0, 'The Beatles'));\n    // Add more artists as needed\n  }\n\n  // Retrieves all artists.\n  public getArtists(): Artist[] {\n    return this.artists;\n  }\n\n  // Retrieves all albums for a given artist.\n  public getAlbums(artist: string): Album[] {\n    return this.albums.filter(album => album.Artist);\n  }\n\n  // Retrieves a specific album by its ID.\n  public getAlbum(id: number): Observable<Album> {\n    return this.http.get<Album>(`/api/albums/${id}`);\n  }\n\n  // Adds a new album to the collection.\n  public createAlbum(album: Album): Observable<Album> {\n    return this.http.post<Album>('/api/albums', album);\n  }\n\n  \n  // Deletes an album from the collection based on its ID.\n  public deleteAlbum(id: number): Observable<void> {\n    return this.http.delete<void>(`/api/albums/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}