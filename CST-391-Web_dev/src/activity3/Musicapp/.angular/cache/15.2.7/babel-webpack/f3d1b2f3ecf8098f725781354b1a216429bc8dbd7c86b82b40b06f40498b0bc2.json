{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// The @Component decorator provides metadata for the component, including its selector, \n// the URL of its accompanying HTML and CSS files.\n// AppComponent is the root component of the application, \n// which acts as the primary layout for the app.\nexport class AppComponent {\n  // The constructor injects the Router service for navigation.\n  // Router allows for programmatically navigating to different components.\n  constructor(router) {\n    this.router = router;\n    // Title of the application, used for display in the NavBar and browser title.\n    this.title = 'My Music Collection';\n    // Current version of the application, displayed in the NavBar through displayVersion().\n    this.version = \"1.0\";\n  }\n  // displayVersion() is an event handler for displaying the app version in an alert box.\n  // It's triggered by user interaction with the NavBar.\n  displayVersion() {\n    alert(this.title + \" Version: \" + this.version);\n  }\n  // displayArtistList() is an event handler for navigating to the list-artists route.\n  // It passes a timestamp in query params, forcing component reinitialization.\n  displayArtistList() {\n    this.router.navigate(['list-artists'], {\n      queryParams: {\n        data: new Date()\n      }\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"navbar\", \"navbar-light\", \"navbar-expand-md\", \"navigation-clean-button\"], [\"id\", \"navbarNav\", 1, \"d-flex\", \"justify-content-center\"], [2, \"margin\", \"0 auto\"], [1, \"navbar-nav\"], [\"href\", \"#\", 1, \"submit-button\", \"text-center\"], [\"href\", \"https://www.gcu.edu\", \"target\", \"_blank\", 1, \"submit-button\", \"text-center\"], [\"routerLink\", \"/create\", 1, \"submit-button\", \"text-center\"], [1, \"submit-button\", \"text-center\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"nav\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"a\", 5);\n      i0.ɵɵtext(8, \"My Music\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"a\", 6);\n      i0.ɵɵtext(10, \"GCU Home Page\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 7);\n      i0.ɵɵtext(12, \"Create Album\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 8);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_13_listener() {\n        return ctx.displayArtistList();\n      });\n      i0.ɵɵtext(14, \"Artist List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_15_listener() {\n        return ctx.displayVersion();\n      });\n      i0.ɵɵtext(16, \"About\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(17, \"router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Welcome to \", ctx.title, \"\");\n    }\n  },\n  dependencies: [i1.RouterOutlet, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAGA;AACA;AAOA;AACA;AACA,OAAM,MAAOA,YAAY;EAQvB;EACA;EACAC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IARzB;IACD,UAAK,GAAG,qBAAqB;IAE7B;IACA,YAAO,GAAG,KAAK;EAOf;EACA;EACA;EACOC,cAAc;IAEnBC,KAAK,CAAC,IAAI,CAACC,KAAK,GAAG,YAAY,GAAG,IAAI,CAACC,OAAO,CAAC;EACjD;EACA;EACA;EAEOC,iBAAiB;IAEtB,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEC,IAAI,EAAE,IAAIC,IAAI;MAAE;IAAC,CAAE,CAAC;EAC9E;;AA1BWX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZzBC,8BAAuB;MAEjBA,YAAsB;MAAAA,iBAAK;MAG/BA,8BAA0E;MAQZA,wBAAQ;MAAAA,iBAAI;MAE1DA,4BAAgF;MAAAA,8BAAa;MAAAA,iBAAI;MAEjGA,6BAA0D;MAAAA,6BAAY;MAAAA,iBAAI;MAE1EA,6BAAmE;MAA9BA;QAAA,OAASC,uBAAmB;MAAA,EAAC;MAACD,4BAAW;MAAAA,iBAAI;MAElFA,kCAAqE;MAA3BA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MAOnGA,iCAA+B;MACjCA,iBAAM;;;MA3BAA,eAAsB;MAAtBA,mDAAsB","names":["AppComponent","constructor","router","displayVersion","alert","title","version","displayArtistList","navigate","queryParams","data","Date","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\git\\CST-391\\src\\activity3\\Musicapp\\src\\app\\app.component.ts","C:\\git\\CST-391\\src\\activity3\\Musicapp\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// The @Component decorator provides metadata for the component, including its selector, \n// the URL of its accompanying HTML and CSS files.\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n// AppComponent is the root component of the application, \n// which acts as the primary layout for the app.\nexport class AppComponent\n{\n   // Title of the application, used for display in the NavBar and browser title.\n  title = 'My Music Collection';\n\n  // Current version of the application, displayed in the NavBar through displayVersion().\n  version = \"1.0\";\n\n  // The constructor injects the Router service for navigation.\n  // Router allows for programmatically navigating to different components.\n  constructor(private router: Router)\n  {\n\n  }\n  // displayVersion() is an event handler for displaying the app version in an alert box.\n  // It's triggered by user interaction with the NavBar.\n  public displayVersion()\n  {\n    alert(this.title + \" Version: \" + this.version);\n  }\n  // displayArtistList() is an event handler for navigating to the list-artists route.\n  // It passes a timestamp in query params, forcing component reinitialization.\n  \n  public displayArtistList()\n  {\n    this.router.navigate(['list-artists'], { queryParams: { data: new Date()} });\n  }\n}\n","<!-- Main container wrapping the content, providing margin and padding according to the Bootstrap 'container' class -->\n<div class=\"container\">\n  <!-- Dynamic header displaying a welcome message. The 'title' property is bound with Angular interpolation, showing how data binding works in Angular. -->\n  <h1>Welcome to {{ title }}</h1>\n\n  <!-- Navigation bar section styled with Bootstrap classes for a light-colored theme and responsiveness. -->\n  <nav class=\"navbar navbar-light navbar-expand-md navigation-clean-button\">\n      <!-- A div for aligning navigation items centrally on the x-axis -->\n      <div class=\"d-flex justify-content-center\" id=\"navbarNav\">\n          <div style=\"margin: 0 auto;\">\n              <!-- Navigation items are wrapped in a div styled as a navbar. -->\n              <div class=\"navbar-nav\">\n                  <!-- Individual navigation links. Each 'a' tag represents a link in the navbar. -->\n                  <!-- 'My Music' link acts as a brand or home link but doesn't lead anywhere ('#' is a placeholder URL). -->\n                  <a class=\"submit-button text-center\" href=\"#\">My Music</a>\n                  <!-- External link to GCU's homepage, opens in a new tab due to 'target=\"_blank\"'. -->\n                  <a class=\"submit-button text-center\" href=\"https://www.gcu.edu\" target=\"_blank\">GCU Home Page</a>\n                  <!-- Internal link to create a new album, uses Angular's 'routerLink' for navigation without reloading the page. -->\n                  <a class=\"submit-button text-center\" routerLink=\"/create\">Create Album</a>\n                  <!-- Executes the 'displayArtistList()' method when clicked, likely displaying a list of artists. -->\n                  <a class=\"submit-button text-center\" (click)=\"displayArtistList()\">Artist List</a>\n                  <!-- A button that when clicked, executes the 'displayVersion()' method, possibly showing the app version. -->\n                  <button class=\"submit-button text-center\" (click)=\"displayVersion()\">About</button>\n              </div>\n          </div>\n      </div>\n  </nav>\n\n  <!-- Angular Router Outlet that acts as a placeholder for dynamically changing content based on the route. -->\n  <router-outlet></router-outlet>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}