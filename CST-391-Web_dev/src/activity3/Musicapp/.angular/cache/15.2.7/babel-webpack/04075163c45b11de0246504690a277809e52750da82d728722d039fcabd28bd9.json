{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/music-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../list-albums/list-albums.component\";\nfunction ListArtistsComponent_div_0_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ListArtistsComponent_div_0_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const artist_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onSelectArtist(artist_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const artist_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", artist_r3.Name, \" \");\n  }\n}\nfunction ListArtistsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, ListArtistsComponent_div_0_button_1_Template, 2, 1, \"button\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.artists);\n  }\n}\nfunction ListArtistsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-list-albums\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"artist\", ctx_r1.selectedArtist);\n  }\n}\nexport class ListArtistsComponent {\n  constructor(route, service) {\n    this.route = route;\n    this.service = service;\n    this.artists = [];\n    this.selectedArtist = null;\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      console.log(\"Getting data...\");\n      this.artists = this.service.getArtists();\n      this.selectedArtist = null;\n    });\n  }\n  onSelectArtist(artist) {\n    console.log(\"Selected Artist of \" + artist.Name);\n    this.selectedArtist = artist;\n  }\n}\nListArtistsComponent.ɵfac = function ListArtistsComponent_Factory(t) {\n  return new (t || ListArtistsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MusicServiceService));\n};\nListArtistsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListArtistsComponent,\n  selectors: [[\"app-list-artists\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"artist-list\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"artist-list\"], [\"class\", \"submit-button\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"submit-button\", 3, \"click\"], [3, \"artist\"]],\n  template: function ListArtistsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ListArtistsComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, ListArtistsComponent_div_1_Template, 2, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedArtist == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedArtist);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ListAlbumsComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAIEA,iCAIC;IADCA;MAAA;MAAA;MAAA;MAAA,OAASA,+CAAsB;IAAA,EAAC;IAEhCA,YAAkB;IACpBA,iBAAS;;;;IADPA,eAAkB;IAAlBA,+CAAkB;;;;;IARtBA,8BAAwD;IAGtDA,iFAMS;IACXA,iBAAM;;;;IALiBA,eAAU;IAAVA,wCAAU;;;;;IAOjCA,2BAA4B;IAC1BA,qCAA6D;IAC/DA,iBAAM;;;;IADaA,eAAyB;IAAzBA,8CAAyB;;;ACH5C,OAAM,MAAOC,oBAAoB;EAIhCC,YAAoBC,KAAqB,EAAUC,OAA4B;IAA3D,UAAK,GAALD,KAAK;IAA0B,YAAO,GAAPC,OAAO;IAH1D,YAAO,GAAa,EAAE;IACtB,mBAAc,GAAkB,IAAI;EAE+C;EAEnFC,QAAQ;IACP,IAAI,CAACF,KAAK,CAACG,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B,IAAI,CAACC,OAAO,GAAG,IAAI,CAACP,OAAO,CAACQ,UAAU,EAAE;MACxC,IAAI,CAACC,cAAc,GAAG,IAAI;IAC3B,CAAC,CAAC;EACH;EAEOC,cAAc,CAACC,MAAc;IACnCN,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGK,MAAM,CAACC,IAAI,CAAC;IAChD,IAAI,CAACH,cAAc,GAAGE,MAAM;EAC7B;;AAjBYd,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVjCrB,qEAUM;MAENA,qEAEM;;;MAdoBA,iDAA4B;MAYhDA,eAAoB;MAApBA,yCAAoB","names":["i0","ListArtistsComponent","constructor","route","service","ngOnInit","queryParams","subscribe","params","console","log","artists","getArtists","selectedArtist","onSelectArtist","artist","Name","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Owenl\\source\\repos\\Activity3\\Musicapp\\src\\app\\list-artists\\list-artists.component.html","C:\\Users\\Owenl\\source\\repos\\Activity3\\Musicapp\\src\\app\\list-artists\\list-artists.component.ts"],"sourcesContent":["<!-- Conditionally display the list of artists only if no artist is currently selected -->\n<div class=\"artist-list\" *ngIf=\"selectedArtist == null\">\n\n   <!-- Iterate over the array of artists and create a button for each one -->\n  <button\n    class=\"submit-button\"\n    *ngFor=\"let artist of artists\" \n    (click)=\"onSelectArtist(artist)\" \n  >\n    {{ artist.Name }} <!-- Display the name of the artist on the button -->\n  </button>\n</div>\n<!-- Display the list-albums component and pass the selectedArtist to it if there is a selected artist -->\n<div *ngIf=\"selectedArtist\">\n  <app-list-albums [artist]=\"selectedArtist\"></app-list-albums><!-- Property binding that passes the selected artist to the list-albums component -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MusicServiceService } from '../service/music-service.service';\n\nimport { Artist } from '../models/Artist';\n\n@Component({\n\tselector: 'app-list-artists',\n\ttemplateUrl: './list-artists.component.html',\n\tstyleUrls: ['./list-artists.component.css']\n})\nexport class ListArtistsComponent implements OnInit {\n\tartists: Artist[] = [];\n\tselectedArtist: Artist | null = null;\n\n\tconstructor(private route: ActivatedRoute, private service: MusicServiceService) { }\n\n\tngOnInit() {\n\t\tthis.route.queryParams.subscribe(params => {\n\t\t\tconsole.log(\"Getting data...\");\n\t\t\tthis.artists = this.service.getArtists();\n\t\t\tthis.selectedArtist = null;\n\t\t});\n\t}\n\n\tpublic onSelectArtist(artist: Artist) {\n\t\tconsole.log(\"Selected Artist of \" + artist.Name);\n\t\tthis.selectedArtist = artist;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}